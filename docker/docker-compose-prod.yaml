version: "3.8"

services:
  #####################################################
  #                   Mysql                           #
  #####################################################
  mysql:
    image: mysql:5.7.36
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init-scripts/:/docker-entrypoint-initdb.d/
    networks:
      - app_network
    command: 
      - "--default-authentication-plugin=mysql_native_password"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_general_ci"
      - "--explicit_defaults_for_timestamp=true"
      - "--lower_case_table_names=1"  
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5      
  #####################################################      
  #                   Redis                           #
  #####################################################
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass 123456 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app_network
  #####################################################
  #                   RocketMQ                        #
  #####################################################
  namesrv:
    image: apache/rocketmq:5.2.0
    container_name: rmqnamesrv
    ports:
      - "9876:9876"
    networks:
      - app_network
    command: sh mqnamesrv
  broker:
    image: apache/rocketmq:5.2.0
    container_name: rmqbroker
    ports:
      - "10909:10909"
      - "10911:10911"
      - "10912:10912"
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    depends_on:
      - namesrv
    networks:
      - app_network
    command: sh mqbroker
  proxy:
    image: apache/rocketmq:5.2.0
    container_name: rmqproxy
    networks:
      - app_network
    depends_on:
      - broker
      - namesrv
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: on-failure
    environment:
      - NAMESRV_ADDR=rmqnamesrv:9876
    command: sh mqproxy
  #####################################################
  #                   Nacos                           #
  #####################################################
  nacos:
    image: nacos/nacos-server:v2.2.1
    container_name: nacos
    restart: on-failure
    networks:
      - app_network
    env_file:
      - ./nacos/env/nacos-standlone-mysql.env
    volumes:
      - ./nacos/logs/:/home/nacos/logs
      - ./nacos/conf/application.properties:/home/nacos/conf/application.properties
    ports:
      - "8848:8848"
      - "9848:9848"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/liveness"]
      interval: 10s
      timeout: 5s
      retries: 5      
    depends_on:
      mysql:
        condition: service_healthy  
  #####################################################
  #                   App                           #
  #####################################################
  gateway-service:
    build: ../services/gateway-service
    container_name: gateway-service
    restart: on-failure    
    ports:
      - "9000:9000"
    networks:
      - app_network
    depends_on:
      nacos:
        condition: service_healthy
      mysql:
        condition: service_healthy
  user-service:
    build: ../services/user-service
    container_name: user-service
    restart: on-failure    
    ports:
      - "9001:9001"
    networks:
      - app_network
    depends_on:
      nacos:
        condition: service_healthy
      mysql:
        condition: service_healthy
  ticket-service:
    build: ../services/ticket-service
    container_name: ticket-service
    restart: on-failure    
    ports:
      - "9002:9002"
    networks:
      - app_network
    depends_on:
      nacos:
        condition: service_healthy
      mysql:
        condition: service_healthy
  order-service:
    build: ../services/order-service
    container_name: order-service
    restart: on-failure    
    ports:
      - "9003:9003"
    networks:
      - app_network
    depends_on:
      nacos:
        condition: service_healthy
      mysql:
        condition: service_healthy
  pay-service:
    build: ../services/pay-service
    container_name: pay-service
    restart: on-failure    
    ports:
      - "9004:9004"
    networks:
      - app_network
    depends_on:
      nacos:
        condition: service_healthy
      mysql:
        condition: service_healthy
  #####################################################
  #                   Nginx                           #
  #####################################################
  nginx:
    image: nginx:1.25.4
    container_name: nginx
    privileged: true
    ports:
      - "80:80"
      - "5174:5174"
      - "5175:5175"
    networks:
      - app_network
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/logs:/var/log/nginx
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - gateway-service
#####################################################
networks:
  app_network:
volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:
